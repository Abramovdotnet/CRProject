Rules for Generating Unique NPC Dialogue JSON (Derived from Dialogue6248.json Analysis)

1.  **File Convention:** Name the JSON file `Dialogue{NPC_ID}.json`.
1.1 ** Create file at /Users/abramovanatoliy/Documents/CRProject/CRProject/Resources/UniqueDialogues/RelationGroup{number} folder
2.  **Root Structure:** The JSON root must contain `initialNode` (String) and `nodes` (Object).
3.  **Node ID Convention:** Use `{NPC_ID}_{node_purpose}` for node IDs where practical. Use the reserved `"end"` ID to terminate dialogue branches.
4.  **Character Foundation:** Base ALL dialogue text, options, tone, motivations, and available paths *directly* on the provided NPC Bio. The dialogue should be a direct reflection and exploration of that bio.
5.  **Initial Node (`initialNode`):**
    *   Must point to a `{NPC_ID}_greeting` node.
    *   Implement the conditional greeting: `{if:first_meeting} [First meeting text] {else} [Subsequent meeting text, ideally using {player_name}] {endif}`.
    *   Greeting text must immediately establish the NPC's core role/personality from their bio.
    *   Initial options should provide broad entry points relevant to the NPC's bio/role (e.g., learn about them, ask about their work/service, investigate).
6.  **Node Structure:** Each node within the `nodes` object must contain:
    *   `text`: NPC's dialogue, consistent with their bio's voice and personality.
    *   `options`: An array of player choices.
    *   (Optional) `requirements`: Conditions to reach the node itself (use sparingly).
7.  **Option Structure:** Each option within the `options` array must contain:
    *   `text`: Clear, concise player choice text. Include `(Cost)` or `[Action Hint]` if relevant.
    *   `type`: Assign a type based on effect (`normal`, `relationshipIncrease`, `relationshipDecrease`, `intimidate`, `seduce`, `investigate`, `loveForSail`, etc., matching system capabilities).
    *   `nextNode`: The ID of the node to transition to (can be `"end"` or loop back).
    *   (Optional) `requirements`: An object specifying conditions (`minRelationship`, `maxRelationship`, `coins`, `isNight`, `isIndoor`, etc.) needed to select the option.
8.  **Dialogue Flow:**
    *   Create meaningful branches based on player choices and `requirements`.
    *   Develop distinct thematic paths relevant to the NPC's bio (e.g., personal history, professional services, secrets, relationships).
    *   Use `relationshipIncrease`/`Decrease` types to react to player tone and build/damage rapport.
    *   Gate deeper conversations or sensitive topics using `minRelationship` requirements.
    *   Incorporate loops (`nextNode` pointing to an earlier node) to allow exploration or second chances.
    *   Ensure all branches eventually lead to `"end"` or a loop.
9.  **Stateful Interactions:**
    *   Plan for relationship progression by gating content behind `minRelationship`.
    *   Include specific nodes (e.g., `{NPC_ID}_greeting_return`, `{NPC_ID}_catchup`) for subsequent visits after certain relationship thresholds are met, offering different dialogue than the initial path.
10. **Integrate Game Mechanics:** Explicitly use `requirements` (like `coins`) and specific `type` values (like `loveForSail`) to link dialogue choices to gameplay systems and actions defined elsewhere (like in `DialogueViewModel` or `DialogueProcessor`).
11. **World Interconnectivity:**
    *   Optionally, select 1-2 other existing NPC dialogue files (from `Resources/UniqueDialogues/RelationGroup{number}`) and their corresponding bios (from `Data/NPCs.json`) as reference points.
    *   Analyze potential relationships, shared locations, professions, contrasting personalities, or potential opinions between the target NPC and these reference NPCs based on their bios and dialogue.
    *   Incorporate subtle mentions, opinions, or references to these other NPCs within the target NPC's dialogue tree (`text` fields or specific `options`).
    *   Ensure these mentions are consistent with both the target NPC's and the reference NPC's established character, bio, and relationship (if any). Avoid creating major plot points or revealing secrets that should be discovered elsewhere. Focus on adding flavour and context.
    *   Update 1-2 other existing NPC dialogue files (from `Resources/UniqueDialogues/RelationGroup{number}`) and apply adjust their dialogues regarding to this npc in same way as we did for this npc dialogues regarding to others in RelationGroup{number}